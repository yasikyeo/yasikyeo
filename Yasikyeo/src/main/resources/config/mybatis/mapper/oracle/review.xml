<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="config.mybatis.mapper.oracle.review">
	<insert id="insertReview" parameterType="ReviewVO">
		<selectKey keyProperty="reviewNo" resultType="int" order="BEFORE">
			select review_no_seq.nextval from dual
		</selectKey>
		insert into review(review_no,review_hit,review_starscore,review_nickname
		,review_content,review_image1,review_image2,review_image3,member_no,shop_no)
		values(#{reviewNo},#{reviewHit},#{reviewStarscore},#{reviewNickname},#{reviewContent}
		,#{reviewImage1},#{reviewImage2},#{reviewImage3},#{memberNo},#{shopNo})
	</insert>
	
	<update id="updateReview" parameterType="ReviewVO">
		update review
		set review_starscore=#{reviewStarscore},review_nickname=#{reviewNickname}
		,review_content=#{reviewContent},review_image1=#{reviewImage1}
		,review_image2=#{reviewImage2},review_image3=#{reviewImage3}
		where review_no=#{reviewNo}
	</update>
	
	<delete id="deleteReview" parameterType="int">
		delete from review where review_no=#{reviewNo}
	</delete>
	
	<select id="selectReview" parameterType="SearchVO" resultType="map">
		select * from 
		(
			select rownum as RNUM, LIST_ALL.*
		    from
		        (select * from reviewView
		        	where shop_no=#{searchKeyword}
		        	order by review_regdate desc
		        ) LIST_ALL
		)
		<![CDATA[
		where  RNUM> #{firstRecordIndex} 
			and RNUM<= #{firstRecordIndex}
			+ #{recordCountPerPage}
		]]>
	</select>
	
	<select id="selectReviewByNo" parameterType="int" resultType="ReviewVO">
		select * from reviewView where review_no=#{reviewNo}
	</select>
	
	<select id="selectCountReview" parameterType="int" resultType="int">
		select count(*) from reviewView where shop_no=#{shopNo}
	</select>
	
	<select id="selectCountReviewByMemberNo" parameterType="map" resultType="int">
		select count(*) from reviewView where review_no=#{reviewNo} and member_no=#{memberNo}
	</select>
	
	<update id="updateStarScoreShop" parameterType="map">
		update shop
		set SHOP_AVGREVIEW=(((SHOP_AVGREVIEW*(SHOP_REVIEWCNT+1))+#{reviewStarscore})/(SHOP_REVIEWCNT+2))
		,SHOP_REVIEWCNT=SHOP_REVIEWCNT+1
		where shop_no = #{shopNo}
	</update>
	
	<update id="updateStarScoreShop2" parameterType="map">
		update shop
		set SHOP_AVGREVIEW=((SHOP_AVGREVIEW*SHOP_REVIEWCNT)+#{reviewStarscore})/SHOP_REVIEWCNT
		where shop_no = #{shopNo}
	</update>
	<update id="updateStarScoreShop3" parameterType="map">
		update shop
		set SHOP_AVGREVIEW=((SHOP_AVGREVIEW*SHOP_REVIEWCNT)+#{reviewStarscore})/(SHOP_REVIEWCNT-1)
		,SHOP_REVIEWCNT=SHOP_REVIEWCNT-1
		where shop_no = #{shopNo}
	</update>
	
</mapper>